    resolver 127.0.0.11 valid=10s;

    server {
        listen 80;

        location /app-proxy {
           rewrite ^/app-proxy(/.*) $1 break;
           set $target '';

           access_by_lua_block{
		local cookie_req = require "parse_request"
		local base64 = require "base64"
		
		local user_cookie = ngx.var.cookie_user
		if not user_cookie then
			ngx.exit(ngx.HTTP_UNAUTHORIZED)
		end

		user_cookie = string.gsub(user_cookie, '"', '')

		local var, val, msg, sig = cookie_req.parse_cookie(user_cookie)
		local secret = "__TODO:_GENERATE_YOUR_OWN_RANDOM_VALUE_HERE__"
		local ok, err = cookie_req.check_cookie_items(var, val, msg, sig, secret)

		if not ok then
			ngx.print(err)
			ngx.exit(ngx.HTTP_FORBIDDEN)
		end

		local user = base64.decode(val)    

		local redis = require 'resty.redis'
		local red = redis:new()

		red:set_timeout(1000)
		local ok, err = red:connect("172.22.0.4", 6379)
		if not ok then
			ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
		end

		local url_items = ngx.re.match(ngx.var.uri, "^/([^/]+)/(.*)")

		local app_prefix = url_items[1]
		local path = url_items[2]

		local res, err = red:get(user..'+'..app_prefix..'+url')

		if res == ngx.null then
			ngx.exit(ngx.HTTP_NOT_FOUND)
		end

		ngx.var.target = res
		ngx.req.set_uri("/"..path)

           }

           proxy_pass $target;
           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection "upgrade";
           proxy_read_timeout 600s;

           proxy_redirect    off;
           proxy_set_header  Host             $http_host;
           proxy_set_header  X-Real-IP        $remote_addr;
           proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
           proxy_set_header  X-Forwarded-Proto $scheme;
        
        }

        location / {
            proxy_pass http://app-proxy:8888;

            proxy_redirect    off;
            proxy_set_header  Host             $http_host;
            proxy_set_header  X-Real-IP        $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Proto $scheme;

        }

	location /ping {
		content_by_lua_block{
			ngx.print("hi")
		}
	}
    }
